name: Build and Publish SmartSelectors.Selenium NuGet Package

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "3.1.x"

      - name: Extract Project Version
        id: get_version
        run: |
          $fileContent = [xml](Get-Content SmartSelectors/SmartSelectors.Selenium/SmartSelectors.Selenium.csproj)
          $version = $fileContent.Project.PropertyGroup.Version
          Write-Output "Project version is $version"
          echo "PROJECT_VERSION=$version" >> $GITHUB_ENV
        shell: pwsh

      - name: Get Published Version
        run: |
          url="https://api.nuget.org/v3-flatcontainer/SmartSelectors.Selenium/index.json"
          jsonResponse=$(curl -s $url)
          echo "Raw JSON Response: $jsonResponse"  # Debug output to see the raw JSON
          latestVersion=$(echo $jsonResponse | jq -r '.versions[-1]')
          echo "Latest version of SmartSelectors.Selenium is $latestVersion"
          echo "PUBLISHED_VERSION=$latestVersion" >> $GITHUB_ENV
        shell: bash

      - name: Check if versions differ
        run: |
          if ("${{ env.PROJECT_VERSION }}" -ne "${{ env.PUBLISHED_VERSION }}") {
            Write-Output "New version found: $env:PROJECT_VERSION. Publishing..."
            echo "SHOULD_PUBLISH=true" >> $GITHUB_ENV
          } else {
            echo "SHOULD_PUBLISH=false" >> $GITHUB_ENV
          }
        shell: pwsh

      - name: Publish Package if Version Changed
        if: env.SHOULD_PUBLISH == 'true'
        run: |
          Write-Output "Publishing SmartSelectors.Selenium package..."
          # dotnet build --configuration Release --no-restore SmartSelectors/SmartSelectors.Selenium/SmartSelectors.Selenium.csproj
          # dotnet pack --configuration Release --no-build --output nupkgs SmartSelectors/SmartSelectors.Selenium/SmartSelectors.Selenium.csproj
          # dotnet nuget push "nupkgs/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
        shell: pwsh
