name: Build and Publish SmartSelectors NuGet Package

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "3.1.x"

      - name: Install PowerShell
        run: sudo apt-get install -y powershell

      - name: Extract Project Version
        id: get_version
        run: |
          $version = [xml](Get-Content SmartSelectors/SmartSelectors/SmartSelectors.csproj).Project.PropertyGroup.Version
          Write-Output "Project version is $version"
          echo "PROJECT_VERSION=$version" >> $GITHUB_ENV
        shell: pwsh

      - name: Get Published Version
        id: get_published_version
        run: |
          $packageName = "SmartSelectors"
          $url = "https://api.nuget.org/v3-flatcontainer/$packageName/index.json"
          Write-Output "URL: $url"
          $response = Invoke-RestMethod -Method Get -Uri $url -ErrorAction Stop
          $latestVersion = $response.versions[-1]
          Write-Output "Latest version of $packageName is $latestVersion"
          echo "PUBLISHED_VERSION=$latestVersion" >> $GITHUB_ENV
        shell: pwsh

      - name: Check if versions differ
        run: |
          if ("${{ env.PROJECT_VERSION }}" -ne "${{ env.PUBLISHED_VERSION }}") {
            Write-Output "New version found: $env:PROJECT_VERSION. Publishing..."
            echo "SHOULD_PUBLISH=true" >> $GITHUB_ENV
          } else {
            echo "SHOULD_PUBLISH=false" >> $GITHUB_ENV
          }
        shell: pwsh

      - name: Publish Package if Version Changed
        if: env.SHOULD_PUBLISH == 'true'
        run: |
          dotnet build --configuration Release --no-restore SmartSelectors/SmartSelectors/SmartSelectors.csproj
          dotnet pack --configuration Release --no-build --output nupkgs SmartSelectors/SmartSelectors/SmartSelectors.csproj
          dotnet nuget push "nupkgs/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
